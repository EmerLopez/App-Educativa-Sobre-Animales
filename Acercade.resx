<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        X5/frtBx/gNlgLsgvIHeOQAAAABJRU5ErkJggg==
</value>
  </data>
</root>